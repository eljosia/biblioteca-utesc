/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/tables/loan-table.js":
/*!*******************************************!*\
  !*** ./resources/js/tables/loan-table.js ***!
  \*******************************************/
/***/ (() => {

eval("\n\nvar table_id = 'loan-table';\n\n// Class definition\nvar KTDatatablesServerSide = function () {\n  // Shared variables\n  var table;\n  var dt;\n  var filterPayment;\n  var _data = {\n    'search': {\n      \"value\": $('#search').val(),\n      \"area\": $('#area').length ? $('#area').val() : null,\n      \"datefilter\": $('#datefilter').length ? $('#datefilter').val() : null\n    }\n  };\n\n  // Private functions\n  var initDatatable = function initDatatable() {\n    dt = $(\"#\" + table_id).DataTable({\n      searchDelay: 1000,\n      processing: true,\n      language: {\n        url: 'https://cdn.datatables.net/plug-ins/1.13.1/i18n/es-MX.json',\n        paginate: {\n          previous: \"<\",\n          next: '>'\n        }\n      },\n      dom: '<\"table-responsive\"rt><\"bottom row\"<\"col-12 d-flex justify-content-center\"i><\"col-12 d-flex justify-content-center\"p>>',\n      order: [[2, 'asc']],\n      columnDefs: [{\n        targets: 0,\n        // El índice de la columna oculta\n        visible: false,\n        // Ocultar la columna\n        searchable: true // Hacer que la columna sea buscable\n      }],\n\n      ajax: {\n        type: 'GET',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content'),\n          'Authorization': 'Bearer ' + $('meta[name=\"auth-key\"]').attr('content')\n        },\n        url: $(\"#\".concat(table_id)).data('url'),\n        data: function data(d) {\n          return $.extend({}, d, _data);\n        }\n      },\n      columns: [{\n        data: 'created_at'\n      }, {\n        data: 'code',\n        title: 'Código'\n      }, {\n        data: 'identifier',\n        title: 'Matrícula'\n      }, {\n        data: 'full_name',\n        title: 'Nombre',\n        render: function render(data, type, row, meta) {\n          var today = new Date(); // Fecha de hoy\n          var returnDateObj = new Date(row.return_date);\n          var alert = \"\";\n          if (returnDateObj < today && row.delivery_date == null) {\n            console.log('entro');\n            alert = '<span class=\"badge badge-light-danger ms-2\">Vencido</span>';\n          }\n          return row.full_name + alert;\n        }\n      }, {\n        data: 'title',\n        title: 'Libro'\n      }, {\n        data: 'loan_date',\n        title: 'Prestamo'\n      }, {\n        data: 'return_date',\n        title: 'Fecha Límite'\n      }, {\n        data: 'created_by',\n        title: 'Prestado Por'\n      }, {\n        data: 'edit_url',\n        render: function render(data, type, row, meta) {\n          var return_btn = \"\";\n          if (row.delivery_date == null) {\n            return_btn = \"\\n                        <a href=\\\"#\\\" class=\\\"btn-delivery_book\\\" \\n                            data-url=\\\"\".concat(row.deliver_url, \"\\\" \\n                            data-code=\\\"\").concat(row.code, \"\\\" \\n                            data-folio=\\\"\").concat(row.folio, \"\\\">\\n                            <i class=\\\"ki-duotone ki-check-circle fs-2 me-2\\\">\\n                                <span class=\\\"path1\\\"></span>\\n                                <span class=\\\"path2\\\"></span>\\n                            </i>\\n                        </a>\");\n          }\n          return \"\\n                    <div class=\\\"d-flex\\\">\\n                        <a href=\\\"\".concat(row.edit_url, \"\\\">\\n                            <i class=\\\"ki-duotone ki-pencil fs-2 me-2\\\">\\n                                <span class=\\\"path1\\\"></span>\\n                                <span class=\\\"path2\\\"></span>\\n                            </i>\\n                        </a>\\n                        <a href=\\\"#\\\" class=\\\"btn-del\\\" data-url=\\\"\").concat(row.delete_url, \"\\\" data-action=\\\"delete\\\">\\n                            <i class=\\\"ki-duotone ki-trash-square fs-2 me-2\\\">\\n                                <span class=\\\"path1\\\"></span>\\n                                <span class=\\\"path2\\\"></span>\\n                                <span class=\\\"path3\\\"></span>\\n                                <span class=\\\"path4\\\"></span>\\n                            </i>\\n                        </a>\\n                        \").concat(return_btn, \"\\n                    </div>\\n                \");\n        }\n      }],\n      fixedColumns: {\n        left: 0,\n        right: 1\n      }\n    });\n    table = dt.$;\n\n    // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n    dt.on('draw', function () {\n      KTMenu.createInstances();\n    });\n  };\n\n  // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n  var handleSearchDatatable = function handleSearchDatatable() {\n    var filterSearch = document.querySelector('[data-kt-ecommerce-product-filter=\"search\"]');\n    filterSearch.addEventListener('keyup', function (e) {\n      console.log(e.target.value);\n      dt.search(e.target.value).draw();\n    });\n  };\n  var handleFilterDatatable = function handleFilterDatatable() {\n    // Filter datatable on submit\n    if ($('#area').length) {\n      console.log(\"Aqui\");\n      $('#area').on('change', function (e) {\n        // data.search.area = e.target.value;\n        // dt.search($('#search').val()).draw();\n        if (e.target.value == \"all\") {\n          dt.column(6).search(\"\").draw();\n        } else {\n          dt.column(6).search(e.target.value).draw();\n        }\n      });\n    }\n    if ($('#datefilter').length) {\n      $('#datefilter').on('apply.daterangepicker', function (ev, picker) {\n        var startDate = picker.startDate.format('YYYY-MM-DD');\n        var endDate = picker.endDate.format('YYYY-MM-DD');\n        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {\n          var date = data[0].split('T')[0]; // Obtener solo la parte de la fecha\n\n          if (date >= startDate && date <= endDate) {\n            return true;\n          }\n          return false;\n        });\n        dt.draw();\n        $.fn.dataTable.ext.search.pop();\n      });\n      $('#datefilter').on('cancel.daterangepicker', function (ev, picker) {\n        $('#datefilter').val('');\n        $.fn.dataTable.ext.search.pop();\n        dt.draw();\n      });\n    }\n  };\n  // Public methods\n  return {\n    init: function init() {\n      initDatatable();\n      handleSearchDatatable();\n      handleFilterDatatable();\n    }\n  };\n}();\n\n// On document ready\nKTUtil.onDOMContentLoaded(function () {\n  KTDatatablesServerSide.init();\n});\n$('input[name=\"datefilter\"]').daterangepicker({\n  autoUpdateInput: false,\n  locale: {\n    cancelLabel: 'Clear'\n  }\n});\n$('input[name=\"datefilter\"]').on('apply.daterangepicker', function (ev, picker) {\n  $(this).val(picker.startDate.format('MM/DD/YYYY') + ' - ' + picker.endDate.format('MM/DD/YYYY'));\n});\n$('input[name=\"datefilter\"]').on('cancel.daterangepicker', function (ev, picker) {\n  $(this).val('');\n});\n$('body').on('click', '.btn-del', function (e) {\n  e.preventDefault();\n  console.log(\"data-action\");\n  var $this = this;\n  var url = $($this).data('url');\n  var ID = $($this).data('id');\n  Swal.fire({\n    title: '¿Confirma eliminarlo?',\n    text: \"Una vez hecho esto, no podrás deshacer esta acción\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#f36',\n    cancelButtonColor: '#cfd6df',\n    confirmButtonText: 'Confirmar'\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      h.getPetition(url, {\n        id: ID\n      }, 'DELETE', false).then(function (data) {\n        if (data.success == true) {\n          toastr.success(data.msg);\n          if (data.action) {\n            setTimeout(function () {\n              location.href = data.action;\n            }, 2000);\n          } else {\n            $(\"#\".concat(data.table_id)).DataTable().ajax.reload();\n          }\n        } else {\n          toastr.error(data.msg ? data.msg : 'Ha ocurrido un error', \"Ops...\");\n          console.log(data);\n        }\n      });\n    }\n  });\n});\n$('body').on('click', '.btn-delivery_book', function (e) {\n  e.preventDefault();\n  console.log(\"data-action\");\n  var $this = this;\n  var url = $($this).data('url');\n  var code = $($this).data('code');\n  var folio = $($this).data('folio');\n  Swal.fire({\n    title: 'Aviso',\n    text: \"Por favor, verifica que el libro sea el mismo y se encuentre en condiciones antes de confirmar la entrega.\",\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#f36',\n    cancelButtonColor: '#cfd6df',\n    confirmButtonText: 'Confirmar',\n    input: 'text',\n    inputPlaceholder: 'Ingrese el número de adquisición'\n  }).then(function (result) {\n    if (result.isConfirmed) {\n      if (result.value.length > 0) {\n        if (result.value == folio) {\n          h.getPetition(url, {\n            code: code,\n            folio: result.value\n          }, 'post', false).then(function (data) {\n            if (data.success == true) {\n              toastr.success(data.msg);\n              if (data.action) {\n                location.href = data.action;\n              }\n            } else {\n              toastr.error(\"Ops...\", 'Ha ocurrido un error');\n              console.log(data);\n            }\n          });\n        } else {\n          toastr.warning('El numero de adquisición no corresponde al libro');\n        }\n      } else {\n        toastr.warning(\"Ingrese el número de adquisición\");\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/tables/loan-table.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/tables/loan-table.js"]();
/******/ 	
/******/ })()
;